import java.util.Vector;//import for vector stackimport java.io.*;//import for scanner, readerimport java.util.Scanner; // Needed for the Scanner classimport java.lang.*;//imported for the stringbuilder class/**   * The Palindrome Demo uses a stack to determine if a string of    * characters is a palindrome.    *    @author Blaine Jacques*/public class PalindromeDemo{      /**     * The main method contains the loop that asks the user what the    * phrase they think is a palindrome. It then tells them     * if it is or not a palindrome.    * 	*/   public static void main(String[] args)    {		//create a Palindrome stack object to get methods associated with such.		PalindromeInterface<Character> inputStack = 		new PalindromeStack<Character>();				String inputPhrase;//hold input for user input		String trimPhrase;//hold the trimmed phrase		String cleanInput;//hold the trimmed and no space phrase		String copyRevOfPhrase; // hold the copy of the reversed phrase				// Create a Scanner object to read from the keyboard		Scanner keyboard = new Scanner (System.in);				//Explain the program		System.out.println("");//empty line for better cmd line readability		System.out.println("     Welcome to the Palindrome Checker      ");		System.out.println("--------------------------------------------");		System.out.println("This program will next ask for your input and "				+ "\ntell you if it is a Palindrome.");							//Get user input for Phrase to be checked		System.out.println("What phrase do you think is a palindrome?");					//and then holds users input phrase		inputPhrase = keyboard.nextLine();					System.out.println("");//empty line for better cmd line readability					//trim leading and ending spaces from inputPhrase		trimPhrase = inputPhrase.trim();					//take the inputPhrase and replace spaces with empty strings		cleanInput = trimPhrase.replace(" ", "");					//an array for stack to iterate through		char[] inputArray = cleanInput.toCharArray();				//take user input and push it onto the stack		for (int i = 0; i < inputArray.length; i++)		{			inputStack.push(inputArray[i]);		}													//creating a stringbuilder to reverse the stack and append to		StringBuilder revOfPhrase = new StringBuilder();				//take and pull off of stack to get the phrase in reverse order.		while(!inputStack.isEmpty())		{			revOfPhrase.append(inputStack.pop());		}				//making it String object instead of a Stringbuilder		copyRevOfPhrase= revOfPhrase.toString();							// compare the inputPhrase with the reverse order. and if equal		// print YOU HAVE a PALINDROME, else, ask if the user wants		// to try again.		if (copyRevOfPhrase.equalsIgnoreCase(cleanInput))		{				System.out.println("IT'S A PALINDROME!");		}		else		{			System.out.println("It's not a Palindrome");		}		  	} // end		   } // end